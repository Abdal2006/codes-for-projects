import requests
import json
import os

class WeatherApp:
    def __init__(self, api_key):
        self.api_key = api_key
        self.base_url = "http://api.openweathermap.org/data/2.5/weather?"
        self.search_history = self.load_search_history()

    def get_weather_data(self, city):
        complete_url = f"{self.base_url}q={city}&appid={self.api_key}&units=metric"
        try:
            response = requests.get(complete_url)
            data = response.json()
            if data["cod"] != "404":
                return data
            else:
                print(f"City {city} not found. Please try again.")
                return None
        except requests.exceptions.RequestException as e:
            print(f"Error: {e}")
            return None

    def save_search_history(self, city, data):
        search_entry = {
            "city": city,
            "weather": {
                "temperature": data["main"]["temp"],
                "description": data["weather"][0]["description"],
                "pressure": data["main"]["pressure"],
                "humidity": data["main"]["humidity"],
                "wind_speed": data["wind"]["speed"]
            }
        }
        self.search_history.append(search_entry)
        with open("weather_history.json", "w") as file:
            json.dump(self.search_history, file, indent=4)

    def load_search_history(self):
        if os.path.exists("weather_history.json"):
            with open("weather_history.json", "r") as file:
                return json.load(file)
        else:
            return []

    def display_weather(self, city):
        weather_data = self.get_weather_data(city)
        if weather_data:
            self.save_search_history(city, weather_data)
            main = weather_data["main"]
            weather = weather_data["weather"][0]
            wind = weather_data["wind"]

            city_name = weather_data["name"]
            temperature = main["temp"]
            pressure = main["pressure"]
            humidity = main["humidity"]
            description = weather["description"]
            wind_speed = wind["speed"]

            print(f"\nWeather in {city_name}:")
            print(f"Temperature: {temperature}°C")
            print(f"Weather: {description.capitalize()}")
            print(f"Pressure: {pressure} hPa")
            print(f"Humidity: {humidity}%")
            print(f"Wind Speed: {wind_speed} m/s")

    def display_search_history(self):
        if not self.search_history:
            print("No search history found.")
            return

        print("\nSearch History:")
        for entry in self.search_history:
            city = entry["city"]
            weather = entry["weather"]
            print(f"\nCity: {city}")
            print(f"Temperature: {weather['temperature']}°C")
            print(f"Weather: {weather['description'].capitalize()}")
            print(f"Pressure: {weather['pressure']} hPa")
            print(f"Humidity: {weather['humidity']}%")
            print(f"Wind Speed: {weather['wind_speed']} m/s")

    def clear_search_history(self):
        self.search_history = []
        with open("weather_history.json", "w") as file:
            json.dump(self.search_history, file, indent=4)
        print("Search history cleared.")

    def start(self):
        print("Welcome to the Enhanced Weather App!")
        while True:
            print("\nOptions:")
            print("1. Get Weather for a City")
            print("2. View Search History")
            print("3. Clear Search History")
            print("4. Exit")

            choice = input("Select an option: ").strip()

            if choice == '1':
                city = input("Enter city name: ").strip()
                self.display_weather(city)
            elif choice == '2':
                self.display_search_history()
            elif choice == '3':
                self.clear_search_history()
            elif choice == '4':
                print("Thank you for using the Weather App. Goodbye!")
                break
            else:
                print("Invalid option. Please try again.")

def main():
    # Replace 'YOUR_API_KEY' with your actual API key from OpenWeatherMap
    api_key = "YOUR_API_KEY"
    weather_app = WeatherApp(api_key)
    weather_app.start()

if __name__ == "__main__":
    main()
